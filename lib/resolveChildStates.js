// Generated by CoffeeScript 1.10.0
(function() {
  var resolveChildStates;

  resolveChildStates = function(states, cb) {
    var deferred, dotCount, name, noUrl, nonAbstractNoUrl, stateToUrl;
    stateToUrl = {};
    deferred = {};
    noUrl = {};
    nonAbstractNoUrl = [];
    dotCount = 0;
    Object.keys(states).forEach(function(name) {
      var concatedName, concatedUrl, i, j, listed, ref, results, state, stateList;
      state = states[name];
      if (name.indexOf('.') === -1) {
        if (!state.url) {
          if (!state.abstract) {
            nonAbstractNoUrl.push(name);
          }
          noUrl[name] = state;
          state.url = '';
        }
        return stateToUrl[name] = state.url;
      }
      stateList = name.split('.');
      concatedName = stateList[0];
      concatedUrl = states[concatedName].url || '';
      results = [];
      for (i = j = 1, ref = stateList.length - 1; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
        listed = stateList[i];
        if (stateToUrl[concatedName] == null) {
          throw new Error("Parent state of " + concatedName + " not defined");
        }
        concatedName += '.' + listed;
        concatedUrl += states[concatedName].url;
        results.push(stateToUrl[concatedName] = concatedUrl);
      }
      return results;
    });
    for (name in stateToUrl) {
      if (noUrl[name] || states[name].abstract) {
        delete stateToUrl[name];
      }
    }
    return cb(null, {
      stateToUrl: stateToUrl,
      noUrl: nonAbstractNoUrl
    });
  };

  module.exports = resolveChildStates;

}).call(this);
