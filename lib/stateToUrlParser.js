// Generated by CoffeeScript 1.10.0
(function() {
  var async, countChar, createStateObjects, flatten, glob, resolveChildStates, stateToUrlParser;

  glob = require('glob');

  async = require('async');

  flatten = require('./flatten');

  createStateObjects = require('./createStateObjects');

  countChar = require('./countChar');

  resolveChildStates = require('./resolveChildStates');

  stateToUrlParser = function(paths, complete) {
    var findFiles, parseFiles;
    findFiles = function(cb) {
      var globFiles;
      globFiles = function(path, cb) {
        return glob(path, function(err, files) {
          return cb(err, files);
        });
      };
      return async.map(paths, globFiles, function(err, result) {
        return cb(null, flatten(result));
      });
    };
    parseFiles = function(files, cb) {
      return async.map(files, createStateObjects, function(err, stateObjects) {
        var i, len, name, result, state, stateList;
        if (err != null) {
          return cb(err);
        }
        result = {};
        for (i = 0, len = stateObjects.length; i < len; i++) {
          stateList = stateObjects[i];
          for (name in stateList) {
            state = stateList[name];
            result[name] = state;
          }
        }
        return cb(null, result);
      });
    };
    return async.waterfall([findFiles, parseFiles, resolveChildStates], complete);
  };

  module.exports = stateToUrlParser;

}).call(this);
